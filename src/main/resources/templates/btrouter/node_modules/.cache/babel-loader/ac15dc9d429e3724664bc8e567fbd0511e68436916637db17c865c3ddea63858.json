{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{TextField,Button,Typography,Link,Alert,InputAdornment,IconButton}from'@mui/material';import{Visibility,VisibilityOff}from'@mui/icons-material';import{AuthContainer,AuthCard,Logo}from'../../styles/authStyles';import btLogo from'../../assets/BT_logo_purple.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Register=()=>{const navigate=useNavigate();const[formData,setFormData]=useState({firstName:'',lastName:'',email:'',password:''});const[errors,setErrors]=useState({});const[showPassword,setShowPassword]=useState(false);const[serverError,setServerError]=useState('');// Clear any existing authentication state when entering register page\nuseEffect(()=>{localStorage.removeItem('token');},[]);const validateForm=()=>{const newErrors={};if(!formData.firstName.trim()){newErrors.firstName='First name is required';}else if(!/^[a-zA-Z\\s-']{2,}$/.test(formData.firstName)){newErrors.firstName='First name must contain only letters, spaces, hyphens, or apostrophes';}if(!formData.lastName.trim()){newErrors.lastName='Last name is required';}else if(!/^[a-zA-Z\\s-']{2,}$/.test(formData.lastName)){newErrors.lastName='Last name must contain only letters, spaces, hyphens, or apostrophes';}if(!formData.email){newErrors.email='Email is required';}else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(formData.email)){newErrors.email='Invalid email address';}if(!formData.password){newErrors.password='Password is required';}else{const passwordChecks={length:formData.password.length>=8,uppercase:/[A-Z]/.test(formData.password),lowercase:/[a-z]/.test(formData.password),number:/[0-9]/.test(formData.password),special:/[!@#$%^&*(),.?\":{}|<>]/.test(formData.password)};if(!Object.values(passwordChecks).every(check=>check)){let errorMessage='Password must contain:';if(!passwordChecks.length)errorMessage+='\\n- At least 8 characters';if(!passwordChecks.uppercase)errorMessage+='\\n- One uppercase letter';if(!passwordChecks.lowercase)errorMessage+='\\n- One lowercase letter';if(!passwordChecks.number)errorMessage+='\\n- One number';if(!passwordChecks.special)errorMessage+='\\n- One special character';newErrors.password=errorMessage;}}setErrors(newErrors);return Object.keys(newErrors).length===0;};const handleSubmit=async e=>{e.preventDefault();setServerError('');if(!validateForm()){return;}try{const response=await fetch('http://localhost:8080/api/auth/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(formData)});const data=await response.json();if(response.ok){navigate('/login');}else{setServerError(data.message||'Registration failed');}}catch(error){setServerError('Network error occurred');}};const handleChange=e=>{const{name,value}=e.target;setFormData(prev=>({...prev,[name]:value}));if(errors[name]){setErrors(prev=>({...prev,[name]:''}));}};return/*#__PURE__*/_jsxs(AuthContainer,{children:[/*#__PURE__*/_jsx(Logo,{src:btLogo,alt:\"BT Logo\"}),/*#__PURE__*/_jsxs(AuthCard,{elevation:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Register\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,style:{width:'100%'},children:[/*#__PURE__*/_jsx(TextField,{margin:\"normal\",required:true,fullWidth:true,id:\"firstName\",label:\"First Name\",name:\"firstName\",autoFocus:true,value:formData.firstName,onChange:handleChange,error:!!errors.firstName,helperText:errors.firstName}),/*#__PURE__*/_jsx(TextField,{margin:\"normal\",required:true,fullWidth:true,id:\"lastName\",label:\"Last Name\",name:\"lastName\",value:formData.lastName,onChange:handleChange,error:!!errors.lastName,helperText:errors.lastName}),/*#__PURE__*/_jsx(TextField,{margin:\"normal\",required:true,fullWidth:true,id:\"email\",label:\"Email Address\",name:\"email\",autoComplete:\"email\",value:formData.email,onChange:handleChange,error:!!errors.email,helperText:errors.email}),/*#__PURE__*/_jsx(TextField,{margin:\"normal\",required:true,fullWidth:true,name:\"password\",label:\"Password\",type:showPassword?'text':'password',id:\"password\",autoComplete:\"new-password\",value:formData.password,onChange:handleChange,error:!!errors.password,helperText:errors.password,InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"toggle password visibility\",onClick:()=>setShowPassword(!showPassword),edge:\"end\",children:showPassword?/*#__PURE__*/_jsx(VisibilityOff,{}):/*#__PURE__*/_jsx(Visibility,{})})})}}),serverError&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mt:2},children:serverError}),/*#__PURE__*/_jsx(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",sx:{mt:3,mb:2,bgcolor:'#6200aa','&:hover':{bgcolor:'#4a0080'}},children:\"Register\"}),/*#__PURE__*/_jsxs(Typography,{align:\"center\",children:[\"Already have an account?\",' ',/*#__PURE__*/_jsx(Link,{component:\"button\",variant:\"body2\",onClick:()=>navigate('/login'),sx:{color:'#6200aa'},children:\"Login here\"})]})]})]})]});};export default Register;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","TextField","Button","Typography","Link","Alert","InputAdornment","IconButton","Visibility","VisibilityOff","AuthContainer","AuthCard","Logo","btLogo","jsx","_jsx","jsxs","_jsxs","Register","navigate","formData","setFormData","firstName","lastName","email","password","errors","setErrors","showPassword","setShowPassword","serverError","setServerError","localStorage","removeItem","validateForm","newErrors","trim","test","passwordChecks","length","uppercase","lowercase","number","special","Object","values","every","check","errorMessage","keys","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","error","handleChange","name","value","target","prev","children","src","alt","elevation","variant","gutterBottom","onSubmit","style","width","margin","required","fullWidth","id","label","autoFocus","onChange","helperText","autoComplete","type","InputProps","endAdornment","position","onClick","edge","severity","sx","mt","mb","bgcolor","align","component","color"],"sources":["D:/Code/Java/BTRouter/src/main/resources/templates/btrouter/src/components/Auth/Register.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    TextField,\r\n    Button,\r\n    Typography,\r\n    Link,\r\n    Alert,\r\n    InputAdornment,\r\n    IconButton\r\n} from '@mui/material';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { AuthContainer, AuthCard, Logo } from '../../styles/authStyles';\r\nimport btLogo from '../../assets/BT_logo_purple.png';\r\n\r\nconst Register = () => {\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [serverError, setServerError] = useState('');\r\n\r\n    // Clear any existing authentication state when entering register page\r\n    useEffect(() => {\r\n        localStorage.removeItem('token');\r\n    }, []);\r\n\r\n    const validateForm = () => {\r\n        const newErrors = {};\r\n\r\n        if (!formData.firstName.trim()) {\r\n            newErrors.firstName = 'First name is required';\r\n        } else if (!/^[a-zA-Z\\s-']{2,}$/.test(formData.firstName)) {\r\n            newErrors.firstName = 'First name must contain only letters, spaces, hyphens, or apostrophes';\r\n        }\r\n\r\n        if (!formData.lastName.trim()) {\r\n            newErrors.lastName = 'Last name is required';\r\n        } else if (!/^[a-zA-Z\\s-']{2,}$/.test(formData.lastName)) {\r\n            newErrors.lastName = 'Last name must contain only letters, spaces, hyphens, or apostrophes';\r\n        }\r\n\r\n        if (!formData.email) {\r\n            newErrors.email = 'Email is required';\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(formData.email)) {\r\n            newErrors.email = 'Invalid email address';\r\n        }\r\n\r\n        if (!formData.password) {\r\n            newErrors.password = 'Password is required';\r\n        } else {\r\n            const passwordChecks = {\r\n                length: formData.password.length >= 8,\r\n                uppercase: /[A-Z]/.test(formData.password),\r\n                lowercase: /[a-z]/.test(formData.password),\r\n                number: /[0-9]/.test(formData.password),\r\n                special: /[!@#$%^&*(),.?\":{}|<>]/.test(formData.password)\r\n            };\r\n\r\n            if (!Object.values(passwordChecks).every(check => check)) {\r\n                let errorMessage = 'Password must contain:';\r\n                if (!passwordChecks.length) errorMessage += '\\n- At least 8 characters';\r\n                if (!passwordChecks.uppercase) errorMessage += '\\n- One uppercase letter';\r\n                if (!passwordChecks.lowercase) errorMessage += '\\n- One lowercase letter';\r\n                if (!passwordChecks.number) errorMessage += '\\n- One number';\r\n                if (!passwordChecks.special) errorMessage += '\\n- One special character';\r\n\r\n                newErrors.password = errorMessage;\r\n            }\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setServerError('');\r\n\r\n        if (!validateForm()) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:8080/api/auth/register', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                navigate('/login');\r\n            } else {\r\n                setServerError(data.message || 'Registration failed');\r\n            }\r\n        } catch (error) {\r\n            setServerError('Network error occurred');\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n        if (errors[name]) {\r\n            setErrors(prev => ({\r\n                ...prev,\r\n                [name]: ''\r\n            }));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AuthContainer>\r\n            <Logo src={btLogo} alt=\"BT Logo\" />\r\n            <AuthCard elevation={3}>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                    Register\r\n                </Typography>\r\n                <form onSubmit={handleSubmit} style={{ width: '100%' }}>\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"firstName\"\r\n                        label=\"First Name\"\r\n                        name=\"firstName\"\r\n                        autoFocus\r\n                        value={formData.firstName}\r\n                        onChange={handleChange}\r\n                        error={!!errors.firstName}\r\n                        helperText={errors.firstName}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"lastName\"\r\n                        label=\"Last Name\"\r\n                        name=\"lastName\"\r\n                        value={formData.lastName}\r\n                        onChange={handleChange}\r\n                        error={!!errors.lastName}\r\n                        helperText={errors.lastName}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                        error={!!errors.email}\r\n                        helperText={errors.email}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type={showPassword ? 'text' : 'password'}\r\n                        id=\"password\"\r\n                        autoComplete=\"new-password\"\r\n                        value={formData.password}\r\n                        onChange={handleChange}\r\n                        error={!!errors.password}\r\n                        helperText={errors.password}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={() => setShowPassword(!showPassword)}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    {serverError && (\r\n                        <Alert severity=\"error\" sx={{ mt: 2 }}>\r\n                            {serverError}\r\n                        </Alert>\r\n                    )}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{\r\n                            mt: 3,\r\n                            mb: 2,\r\n                            bgcolor: '#6200aa',\r\n                            '&:hover': {\r\n                                bgcolor: '#4a0080'\r\n                            }\r\n                        }}\r\n                    >\r\n                        Register\r\n                    </Button>\r\n                    <Typography align=\"center\">\r\n                        Already have an account?{' '}\r\n                        <Link\r\n                            component=\"button\"\r\n                            variant=\"body2\"\r\n                            onClick={() => navigate('/login')}\r\n                            sx={{ color: '#6200aa' }}\r\n                        >\r\n                            Login here\r\n                        </Link>\r\n                    </Typography>\r\n                </form>\r\n            </AuthCard>\r\n        </AuthContainer>\r\n    );\r\n};\r\n\r\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}