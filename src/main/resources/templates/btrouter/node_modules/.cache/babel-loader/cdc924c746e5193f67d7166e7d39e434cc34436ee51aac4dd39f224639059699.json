{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{TextField,Button,Typography,Link,Alert,InputAdornment,IconButton}from'@mui/material';import{Visibility,VisibilityOff}from'@mui/icons-material';import{AuthContainer,AuthCard,Logo}from'../../styles/authStyles';import btLogo from'../../assets/BT_logo_purple.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const navigate=useNavigate();const[formData,setFormData]=useState({email:'',password:''});const[errors,setErrors]=useState({});const[showPassword,setShowPassword]=useState(false);const[serverError,setServerError]=useState('');const validateForm=()=>{const newErrors={};// Email validation\nif(!formData.email){newErrors.email='Email is required';}else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(formData.email)){newErrors.email='Invalid email address';}// Password validation\nif(!formData.password){newErrors.password='Password is required';}setErrors(newErrors);return Object.keys(newErrors).length===0;};const handleSubmit=async e=>{e.preventDefault();setServerError('');if(!validateForm()){return;}try{const response=await fetch('http://localhost:8080/api/auth/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(formData)});const data=await response.json();if(response.ok){localStorage.setItem('token',data.token);navigate('/home');}else{setServerError(data.message||'Login failed');}}catch(error){setServerError('Network error occurred');}};const handleChange=e=>{const{name,value}=e.target;setFormData(prev=>({...prev,[name]:value}));// Clear error when user starts typing\nif(errors[name]){setErrors(prev=>({...prev,[name]:''}));}};return/*#__PURE__*/_jsxs(AuthContainer,{children:[/*#__PURE__*/_jsx(Logo,{src:btLogo,alt:\"BT Logo\"}),/*#__PURE__*/_jsxs(AuthCard,{elevation:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,style:{width:'100%'},children:[/*#__PURE__*/_jsx(TextField,{margin:\"normal\",required:true,fullWidth:true,id:\"email\",label:\"Email Address\",name:\"email\",autoComplete:\"email\",autoFocus:true,value:formData.email,onChange:handleChange,error:!!errors.email,helperText:errors.email}),/*#__PURE__*/_jsx(TextField,{margin:\"normal\",required:true,fullWidth:true,name:\"password\",label:\"Password\",type:showPassword?'text':'password',id:\"password\",autoComplete:\"current-password\",value:formData.password,onChange:handleChange,error:!!errors.password,helperText:errors.password,InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"toggle password visibility\",onClick:()=>setShowPassword(!showPassword),edge:\"end\",children:showPassword?/*#__PURE__*/_jsx(VisibilityOff,{}):/*#__PURE__*/_jsx(Visibility,{})})})}}),serverError&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mt:2},children:serverError}),/*#__PURE__*/_jsx(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",sx:{mt:3,mb:2,bgcolor:'#6200aa','&:hover':{bgcolor:'#4a0080'}},children:\"Login\"}),/*#__PURE__*/_jsxs(Typography,{align:\"center\",children:[\"Don't have an account?\",' ',/*#__PURE__*/_jsx(Link,{component:\"button\",variant:\"body2\",onClick:()=>navigate('/register'),sx:{color:'#6200aa'},children:\"Register here\"})]})]})]})]});};export default Login;","map":{"version":3,"names":["React","useState","useNavigate","TextField","Button","Typography","Link","Alert","InputAdornment","IconButton","Visibility","VisibilityOff","AuthContainer","AuthCard","Logo","btLogo","jsx","_jsx","jsxs","_jsxs","Login","navigate","formData","setFormData","email","password","errors","setErrors","showPassword","setShowPassword","serverError","setServerError","validateForm","newErrors","test","Object","keys","length","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","message","error","handleChange","name","value","target","prev","children","src","alt","elevation","variant","gutterBottom","onSubmit","style","width","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","helperText","type","InputProps","endAdornment","position","onClick","edge","severity","sx","mt","mb","bgcolor","align","component","color"],"sources":["D:/Code/Java/BTRouter/src/main/resources/templates/btrouter/src/components/Auth/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    TextField,\r\n    Button,\r\n    Typography,\r\n    Link,\r\n    Alert,\r\n    InputAdornment,\r\n    IconButton\r\n} from '@mui/material';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { AuthContainer, AuthCard, Logo } from '../../styles/authStyles';\r\nimport btLogo from '../../assets/BT_logo_purple.png';\r\n\r\nconst Login = () => {\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [serverError, setServerError] = useState('');\r\n\r\n    const validateForm = () => {\r\n        const newErrors = {};\r\n        // Email validation\r\n        if (!formData.email) {\r\n            newErrors.email = 'Email is required';\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(formData.email)) {\r\n            newErrors.email = 'Invalid email address';\r\n        }\r\n\r\n        // Password validation\r\n        if (!formData.password) {\r\n            newErrors.password = 'Password is required';\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setServerError('');\r\n\r\n        if (!validateForm()) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:8080/api/auth/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                localStorage.setItem('token', data.token);\r\n                navigate('/home');\r\n            } else {\r\n                setServerError(data.message || 'Login failed');\r\n            }\r\n        } catch (error) {\r\n            setServerError('Network error occurred');\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n        // Clear error when user starts typing\r\n        if (errors[name]) {\r\n            setErrors(prev => ({\r\n                ...prev,\r\n                [name]: ''\r\n            }));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AuthContainer>\r\n            <Logo src={btLogo} alt=\"BT Logo\" />\r\n            <AuthCard elevation={3}>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                    Login\r\n                </Typography>\r\n                <form onSubmit={handleSubmit} style={{ width: '100%' }}>\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                        error={!!errors.email}\r\n                        helperText={errors.email}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type={showPassword ? 'text' : 'password'}\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={formData.password}\r\n                        onChange={handleChange}\r\n                        error={!!errors.password}\r\n                        helperText={errors.password}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={() => setShowPassword(!showPassword)}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    {serverError && (\r\n                        <Alert severity=\"error\" sx={{ mt: 2 }}>\r\n                            {serverError}\r\n                        </Alert>\r\n                    )}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{\r\n                            mt: 3,\r\n                            mb: 2,\r\n                            bgcolor: '#6200aa',\r\n                            '&:hover': {\r\n                                bgcolor: '#4a0080'\r\n                            }\r\n                        }}\r\n                    >\r\n                        Login\r\n                    </Button>\r\n                    <Typography align=\"center\">\r\n                        Don't have an account?{' '}\r\n                        <Link\r\n                            component=\"button\"\r\n                            variant=\"body2\"\r\n                            onClick={() => navigate('/register')}\r\n                            sx={{ color: '#6200aa' }}\r\n                        >\r\n                            Register here\r\n                        </Link>\r\n                    </Typography>\r\n                </form>\r\n            </AuthCard>\r\n        </AuthContainer>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}