{"ast":null,"code":"import{Navigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children}=_ref;// Check if JWT token exists in localStorage\nconst token=localStorage.getItem('token');// Redirect to login if no token found\nif(!token){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}try{// Decode and verify JWT token expiration\nconst payload=JSON.parse(atob(token.split('.')[1]));if(payload.exp<Date.now()/1000){localStorage.removeItem('token');return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}}catch(error){// Handle invalid token by removing it and redirecting\nlocalStorage.removeItem('token');return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}// If token is valid, render the protected component\nreturn children;};export default ProtectedRoute;","map":{"version":3,"names":["Navigate","jsx","_jsx","ProtectedRoute","_ref","children","token","localStorage","getItem","to","replace","payload","JSON","parse","atob","split","exp","Date","now","removeItem","error"],"sources":["D:/Code/Java/BTRouter/src/main/resources/templates/btrouter/src/components/Auth/ProtectedRoute.jsx"],"sourcesContent":["import { Navigate } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n    // Check if JWT token exists in localStorage\r\n    const token = localStorage.getItem('token');\r\n\r\n    // Redirect to login if no token found\r\n    if (!token) {\r\n        return <Navigate to=\"/login\" replace />;\r\n    }\r\n\r\n    try {\r\n        // Decode and verify JWT token expiration\r\n        const payload = JSON.parse(atob(token.split('.')[1]));\r\n        if (payload.exp < Date.now() / 1000) {\r\n            localStorage.removeItem('token');\r\n            return <Navigate to=\"/login\" replace />;\r\n        }\r\n    } catch (error) {\r\n        // Handle invalid token by removing it and redirecting\r\n        localStorage.removeItem('token');\r\n        return <Navigate to=\"/login\" replace />;\r\n    }\r\n\r\n    // If token is valid, render the protected component\r\n    return children;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5C,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChC;AACA,KAAM,CAAAE,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C;AACA,GAAI,CAACF,KAAK,CAAE,CACR,mBAAOJ,IAAA,CAACF,QAAQ,EAACS,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CAC3C,CAEA,GAAI,CACA;AACA,KAAM,CAAAC,OAAO,CAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACR,KAAK,CAACS,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACrD,GAAIJ,OAAO,CAACK,GAAG,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAG,IAAI,CAAE,CACjCX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC,CAChC,mBAAOjB,IAAA,CAACF,QAAQ,EAACS,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CAC3C,CACJ,CAAE,MAAOU,KAAK,CAAE,CACZ;AACAb,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC,CAChC,mBAAOjB,IAAA,CAACF,QAAQ,EAACS,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CAC3C,CAEA;AACA,MAAO,CAAAL,QAAQ,CACnB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}